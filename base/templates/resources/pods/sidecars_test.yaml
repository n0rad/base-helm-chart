---
# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: pod sidecar containers
templates:
  - base.yaml
values:
  - ../../../tests/overallValues.yaml
tests:
  - it: with explicit name should pass
    set:
      resources.controllers.main.containers:
        additional1:
          nameOverride: template-test
          image:
            repository: test
            tag: test
    documentSelector:
      path: kind
      value: Deployment
    asserts:
      - equal:
          path: spec.template.spec.containers[1].name
          value: template-test

  - it: with implicit name should pass
    set:
      resources.controllers.main.containers:
        additional1:
          image:
            repository: test
            tag: test
    documentSelector:
      path: kind
      value: Deployment
    asserts:
      - equal:
          path: spec.template.spec.containers[1].name
          value: additional1

  - it: with templated name should pass
    set:
      resources.controllers.main.containers:
        additional1:
          nameOverride: "{{ .Release.Name | lower }}-container"
          image:
            repository: test
            tag: test
    documentSelector:
      path: kind
      value: Deployment
    asserts:
      - equal:
          path: spec.template.spec.containers[1].name
          value: release-name-container

  - it: with custom env vars dict should pass
    set:
      resources.controllers.main.containers:
        main:
          env:
            main_env: value
        additional1:
          image:
            repository: test
            tag: test
          env:
            int: 1
            float: 1.5
            string: value_of_env
            template: "{{ .Release.Name }}-admin"
    documentSelector:
      path: kind
      value: Deployment
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: main_env
            value: "value"
      - equal:
          path: spec.template.spec.containers[1].env[0]
          value:
            name: float
            value: "1.5"
      - equal:
          path: spec.template.spec.containers[1].env[1]
          value:
            name: int
            value: "1"
      - equal:
          path: spec.template.spec.containers[1].env[2]
          value:
            name: string
            value: value_of_env
      - equal:
          path: spec.template.spec.containers[1].env[3]
          value:
            name: template
            value: RELEASE-NAME-admin
