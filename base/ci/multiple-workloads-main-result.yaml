---
# Source: base-template/templates/base.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name
  labels:
    app: release-name
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: base-template-0.0.0
spec:
  maxUnavailable: 10%
  selector:
    matchLabels:
      app.kubernetes.io/component: main
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: release-name
---
# Source: base-template/templates/base.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-titi
  labels:
    app: release-name
    app.kubernetes.io/component: titi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: base-template-0.0.0
spec:
  maxUnavailable: 10%
  selector:
    matchLabels:
      app.kubernetes.io/component: titi
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: release-name
---
# Source: base-template/templates/base.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name
  labels:
    app: release-name
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: base-template-0.0.0
secrets:
  - name: release-name-sa-token
---
# Source: base-template/templates/base.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-titi
  labels:
    app: release-name
    app.kubernetes.io/component: titi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: base-template-0.0.0
secrets:
  - name: release-name-titi-sa-token
---
# Source: base-template/templates/base.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: release-name-sa-token
  namespace: default
  labels:
    app: release-name
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: base-template-0.0.0
  annotations:
    kubernetes.io/service-account.name: release-name
---
# Source: base-template/templates/base.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: release-name-titi-sa-token
  namespace: default
  labels:
    app: release-name
    app.kubernetes.io/component: titi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: base-template-0.0.0
  annotations:
    kubernetes.io/service-account.name: release-name-titi
---
# Source: base-template/templates/base.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name
  labels:
    app: release-name
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/service: release-name
    helm.sh/chart: base-template-0.0.0
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: release-name
---
# Source: base-template/templates/base.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-titi
  labels:
    app: release-name
    app.kubernetes.io/component: titi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/service: release-name-titi
    helm.sh/chart: base-template-0.0.0
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/component: titi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: release-name
---
# Source: base-template/templates/base.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name
  labels:
    app: release-name
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: base-template-0.0.0
spec:
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 33%
  selector:
    matchLabels:
      app.kubernetes.io/component: main
      app.kubernetes.io/name: release-name
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: release-name
        app.kubernetes.io/component: main
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: release-name
        sidecar.istio.io/inject: "false"
    spec:
      enableServiceLinks: true
      serviceAccountName: release-name
      automountServiceAccountToken: true
      securityContext:
        runAsNonRoot: true
      dnsPolicy: ClusterFirst
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - release-name
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - main
              topologyKey: kubernetes.io/hostname
            weight: 50
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: main
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/name: release-name
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: main
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/name: release-name
          maxSkew: 2
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
      containers:
        - image: there:42
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          name: main
          ports:
          - containerPort: 8080
            name: http
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          volumeMounts:
          - mountPath: /tmp
            name: tmp
      volumes:
        - emptyDir: {}
          name: tmp
---
# Source: base-template/templates/base.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-titi
  labels:
    app: release-name
    app.kubernetes.io/component: titi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: base-template-0.0.0
spec:
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 33%
  selector:
    matchLabels:
      app.kubernetes.io/component: titi
      app.kubernetes.io/name: release-name
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: release-name
        app.kubernetes.io/component: titi
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: release-name
        sidecar.istio.io/inject: "false"
    spec:
      enableServiceLinks: true
      serviceAccountName: release-name-titi
      automountServiceAccountToken: true
      securityContext:
        runAsNonRoot: true
      dnsPolicy: ClusterFirst
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - release-name
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - titi
              topologyKey: kubernetes.io/hostname
            weight: 50
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: titi
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/name: release-name
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: titi
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/name: release-name
          maxSkew: 2
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
      containers:
        - image: test:43
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          name: main
          ports:
          - containerPort: 8080
            name: http
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          volumeMounts:
          - mountPath: /tmp
            name: tmp
      volumes:
        - emptyDir: {}
          name: tmp
---
# Source: base-template/templates/base.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: release-name
  labels:
    app: release-name
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: base-template-0.0.0
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name
  minReplicas: 2
  maxReplicas: 50
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 70
          type: Utilization
      type: Resource
---
# Source: base-template/templates/base.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-titi
  labels:
    app: release-name
    app.kubernetes.io/component: titi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: base-template-0.0.0
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-titi
  minReplicas: 2
  maxReplicas: 50
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 70
          type: Utilization
      type: Resource
