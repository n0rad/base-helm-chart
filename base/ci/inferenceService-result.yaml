---
# Source: base-template/templates/base.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name
  labels:
    app: release-name
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: base-template-0.0.0
    tags.datadoghq.com/service: release-name
    tags.datadoghq.com/version: "1.2"
spec:
  maxUnavailable: 10%
  selector:
    matchLabels:
      app.kubernetes.io/component: main
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: release-name
---
# Source: base-template/templates/base.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name
  labels:
    app: release-name
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: base-template-0.0.0
    tags.datadoghq.com/service: release-name
    tags.datadoghq.com/version: "1.2"
secrets:
  - name: release-name-sa-token
---
# Source: base-template/templates/base.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: release-name-sa-token
  labels:
    app: release-name
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: base-template-0.0.0
    tags.datadoghq.com/service: release-name
    tags.datadoghq.com/version: "1.2"
  annotations:
    kubernetes.io/service-account.name: release-name
---
# Source: base-template/templates/base.yaml
apiVersion: serving.kserve.io/v1beta1
kind: InferenceService
metadata:
  name: release-name
  labels:
    app: release-name
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: base-template-0.0.0
    tags.datadoghq.com/service: release-name
    tags.datadoghq.com/version: "1.2"
  annotations:
    serving.kserve.io/enable-prometheus-scraping: "true"
spec:
  predictor:
    minReplicas: 2
    maxReplicas: 50
    scaleTarget: 70
    scaleMetric: cpu
    enableServiceLinks: true
    serviceAccountName: release-name
    automountServiceAccountToken: true
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    dnsPolicy: ClusterFirst
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: cloud.blabla.io/k8s-volatile
              operator: Exists
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - release-name
              - key: app.kubernetes.io/component
                operator: In
                values:
                - main
            topologyKey: kubernetes.io/hostname
          weight: 50
    topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: main
            app.kubernetes.io/instance: release-name
            app.kubernetes.io/name: release-name
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: main
            app.kubernetes.io/instance: release-name
            app.kubernetes.io/name: release-name
        maxSkew: 2
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
    tolerations:
      - effect: NoSchedule
        key: cloud.blabla.io/k8s-volatile
        operator: Equal
        value: "true"
    volumes:
      - hostPath:
          path: /var/run/datadog
        name: dsdsocket
      - emptyDir: {}
        name: tmp
    model:
      
      image: busybox:1.2
      imagePullPolicy: IfNotPresent
      securityContext: 
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      env: 
        - name: DD_DOGSTATSD_URL
          value: unix:///var/run/datadog/dsd.socket
        - name: DD_JMXFETCH_ENABLED
          value: "false"
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_PROFILING_ENABLED
          value: "false"
        - name: DD_REMOTE_CONFIGURATION_ENABLED
          value: "false"
        - name: DD_RUNTIME_METRICS_ENABLED
          value: "true"
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_SERVICE_MAPPING
          value: cassandra:release-name-cassandra,kafka:release-name-kafka,elasticsearch:release-name-elasticsearch,mariadb:release-name-mariadb,mysql:release-name-mysql,redis:release-name-redis,rabbitmq:release-name-rabbitmq,postgresql:release-name-postgresql,postgres:release-name-postgres,curl:release-name-curl,guzzle:release-name-guzzle,pdo:release-name-pdo,phpredis:release-name-phpredis,oracle:release-name-oracle
        - name: DD_TRACE_AGENT_URL
          value: unix:///var/run/datadog/apm.socket
        - name: DD_TRACE_ENABLED
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "0.01"
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
      volumeMounts: 
        - mountPath: /var/run/datadog
          name: dsdsocket
        - mountPath: /tmp
          name: tmp
      modelFormat:
        name: sklearn
      protocolVersion: v2
      storageUri: gs://bucket/prefix
---
# Source: base-template/templates/base.yaml
apiVersion: networking.istio.io/v1
kind: Sidecar
metadata:
  name: release-name
  labels:
    app: release-name
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: base-template-0.0.0
    istio.io/tag: stable
    tags.datadoghq.com/service: release-name
    tags.datadoghq.com/version: "1.2"
spec:
  workloadSelector:
    labels:
      app.kubernetes.io/component: main
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: release-name
  outboundTrafficPolicy:
    mode: "REGISTRY_ONLY"
  egress:
    - hosts:
      - istio-system/metadata.google.internal
      - istio-system/metadata.google.internal.
